name: Commit Stage # The name of the workflow
on: push # The workflow is triggered on push events

env:
  REGISTRY: ghcr.io # Uses the Github Container Registry
  IMAGE_NAME: yimengl/catalog-service
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write # Permission to submit security events to GitHub
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}" # Path to the project directory
          fail-build: false # Whether to fail the build in the event of security vulnerabilities
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }} # Fetches the report from the output of the previous step
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew build
      - name: Setup tools
        uses: alexellis/setip-arkade@v3
      - name: Install tools
        uses: alexellis/arkade-get@master
        with:
          kubeconform: latest
      - name: validate Kubernetes manifests
        run: |
          kubeconform --strict --summary k8s

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read # Permission to check out the current Git repository
      packages: write # Permission to upload images to Github Container Registry
      security-events: write # Permission to submit security events to GitHub
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
          --imageName ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.VERSION}}
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.VERSION}}
          fail-build: false # it won't fail the build if vulnerabilities are found in the image
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }} # Fetches the report from the output of the previous step
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
